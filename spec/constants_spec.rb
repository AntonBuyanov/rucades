# frozen_string_literal: true

# Copyright (c) 2023 Maxim [maxirmx] Samsonov (https://sw.consulting)
# All rights reserved.
# This file is a part of rucades

# rubocop:disable Metrics/BlockLength
RSpec.describe Rucades do
  describe "Constants" do
    it "has appropriate numeric constant definitions" do
      expect(Rucades::CADESCOM_STRING_TO_UCS2LE).to eq(0)
      expect(Rucades::CADESCOM_BASE64_TO_BINARY).to eq(1)
      expect(Rucades::CAPICOM_LOCAL_MACHINE_STORE).to eq(1)
      expect(Rucades::CAPICOM_CURRENT_USER_STORE).to eq(2)
      expect(Rucades::CADESCOM_MEMORY_STORE).to eq(0)
      expect(Rucades::CADESCOM_CURRENT_USER_STORE).to eq(2)
      expect(Rucades::CADESCOM_CONTAINER_STORE).to eq(100)
      expect(Rucades::CAPICOM_STORE_OPEN_MAXIMUM_ALLOWED).to eq(2)
      expect(Rucades::CADESCOM_XML_SIGNATURE_TYPE_ENVELOPED).to eq(0)
      expect(Rucades::CADESCOM_XML_SIGNATURE_TYPE_ENVELOPING).to eq(1)
      expect(Rucades::CADESCOM_XML_SIGNATURE_TYPE_TEMPLATE).to eq(2)
      expect(Rucades::CADESCOM_CADES_DEFAULT).to eq(0)
      expect(Rucades::CADESCOM_CADES_BES).to eq(1)
      expect(Rucades::CADESCOM_CADES_T).to eq(0x5)
      expect(Rucades::CADESCOM_CADES_X_LONG_TYPE_1).to eq(0x5d)
      expect(Rucades::CADESCOM_PKCS7_TYPE).to eq(0xffff)
      expect(Rucades::CADESCOM_ENCODE_BASE64).to eq(0)
      expect(Rucades::CADESCOM_ENCODE_BINARY).to eq(1)
      expect(Rucades::CADESCOM_XADES_DEFAULT).to eq(0x00000010)
      expect(Rucades::CADESCOM_XADES_BES).to eq(0x00000020)
      expect(Rucades::CADESCOM_XADES_T).to eq(0x00000050)
      expect(Rucades::CADESCOM_XADES_X_LONG_TYPE_1).to eq(0x000005d0)
      expect(Rucades::CADESCOM_XADES_A).to eq(0x000007d0)
      expect(Rucades::CADESCOM_XMLDSIG_TYPE).to eq(0)
      expect(Rucades::CAPICOM_CERTIFICATE_INCLUDE_WHOLE_CHAIN).to eq(1)
      expect(Rucades::CAPICOM_CERTIFICATE_INCLUDE_END_ENTITY_ONLY).to eq(2)
      expect(Rucades::CAPICOM_CERTIFICATE_INCLUDE_CHAIN_EXCEPT_ROOT).to eq(0)
      expect(Rucades::CAPICOM_CERT_INFO_SUBJECT_SIMPLE_NAME).to eq(0)
      expect(Rucades::CAPICOM_CERTIFICATE_FIND_SHA1_HASH).to eq(0)
      expect(Rucades::CAPICOM_CERTIFICATE_FIND_SUBJECT_NAME).to eq(1)
      expect(Rucades::CAPICOM_CERTIFICATE_FIND_ISSUER_NAME).to eq(2)
      expect(Rucades::CAPICOM_CERTIFICATE_FIND_ROOT_NAME).to eq(3)
      expect(Rucades::CAPICOM_CERTIFICATE_FIND_TEMPLATE_NAME).to eq(4)
      expect(Rucades::CAPICOM_CERTIFICATE_FIND_EXTENSION).to eq(5)
      expect(Rucades::CAPICOM_CERTIFICATE_FIND_EXTENDED_PROPERTY).to eq(6)
      expect(Rucades::CAPICOM_CERTIFICATE_FIND_APPLICATION_POLICY).to eq(7)
      expect(Rucades::CAPICOM_CERTIFICATE_FIND_CERTIFICATE_POLICY).to eq(8)
      expect(Rucades::CAPICOM_CERTIFICATE_FIND_TIME_VALID).to eq(9)
      expect(Rucades::CAPICOM_CERTIFICATE_FIND_TIME_NOT_YET_VALID).to eq(10)
      expect(Rucades::CAPICOM_CERTIFICATE_FIND_TIME_EXPIRED).to eq(11)
      expect(Rucades::CAPICOM_CERTIFICATE_FIND_KEY_USAGE).to eq(12)
      expect(Rucades::CAPICOM_PROPID_ENHKEY_USAGE).to eq(9)
      expect(Rucades::CAPICOM_OID_OTHER).to eq(0)
      expect(Rucades::CAPICOM_OID_KEY_USAGE_EXTENSION).to eq(10)
      expect(Rucades::CAPICOM_ENCODE_BINARY).to eq(1)
      expect(Rucades::CAPICOM_ENCODE_ANY).to eq(0xffffffff)
      expect(Rucades::CAPICOM_EKU_OTHER).to eq(0)
      expect(Rucades::CAPICOM_EKU_SERVER_AUTH).to eq(1)
      expect(Rucades::CAPICOM_EKU_CLIENT_AUTH).to eq(2)
      expect(Rucades::CAPICOM_EKU_CODE_SIGNING).to eq(3)
      expect(Rucades::CAPICOM_EKU_EMAIL_PROTECTION).to eq(4)
      expect(Rucades::CAPICOM_EKU_SMARTCARD_LOGON).to eq(5)
      expect(Rucades::CAPICOM_AUTHENTICATED_ATTRIBUTE_SIGNING_TIME).to eq(0)
      expect(Rucades::CAPICOM_AUTHENTICATED_ATTRIBUTE_DOCUMENT_NAME).to eq(1)
      expect(Rucades::CAPICOM_AUTHENTICATED_ATTRIBUTE_DOCUMENT_DESCRIPTION).to eq(2)
      expect(Rucades::CADESCOM_AUTHENTICATED_ATTRIBUTE_SIGNING_TIME).to eq(0)
      expect(Rucades::CADESCOM_AUTHENTICATED_ATTRIBUTE_DOCUMENT_NAME).to eq(1)
      expect(Rucades::CADESCOM_AUTHENTICATED_ATTRIBUTE_DOCUMENT_DESCRIPTION).to eq(2)
      expect(Rucades::CADESCOM_ATTRIBUTE_OTHER).to eq(-1)
      expect(Rucades::CADESCOM_DISPLAY_DATA_NONE).to eq(0)
      expect(Rucades::CADESCOM_DISPLAY_DATA_CONTENT).to eq(1)
      expect(Rucades::CADESCOM_DISPLAY_DATA_ATTRIBUTE).to eq(2)
      expect(Rucades::CADESCOM_ENCRYPTION_ALGORITHM_RC2).to eq(0)
      expect(Rucades::CADESCOM_ENCRYPTION_ALGORITHM_RC4).to eq(1)
      expect(Rucades::CADESCOM_ENCRYPTION_ALGORITHM_DES).to eq(2)
      expect(Rucades::CADESCOM_ENCRYPTION_ALGORITHM_3DES).to eq(3)
      expect(Rucades::CADESCOM_ENCRYPTION_ALGORITHM_AES).to eq(4)
      expect(Rucades::CADESCOM_ENCRYPTION_ALGORITHM_GOST_28147_89).to eq(25)
      expect(Rucades::CAPICOM_HASH_ALGORITHM_SHA1).to eq(0)
      expect(Rucades::CAPICOM_HASH_ALGORITHM_MD2).to eq(1)
      expect(Rucades::CAPICOM_HASH_ALGORITHM_MD4).to eq(2)
      expect(Rucades::CAPICOM_HASH_ALGORITHM_MD5).to eq(3)
      expect(Rucades::CAPICOM_HASH_ALGORITHM_SHA_256).to eq(4)
      expect(Rucades::CAPICOM_HASH_ALGORITHM_SHA_384).to eq(5)
      expect(Rucades::CAPICOM_HASH_ALGORITHM_SHA_512).to eq(6)
      expect(Rucades::CADESCOM_HASH_ALGORITHM_CP_GOST_3411).to eq(100)
      expect(Rucades::CADESCOM_HASH_ALGORITHM_CP_GOST_3411_2012_256).to eq(101)
      expect(Rucades::CADESCOM_HASH_ALGORITHM_CP_GOST_3411_2012_512).to eq(102)
      expect(Rucades::CADESCOM_HASH_ALGORITHM_CP_GOST_3411_HMAC).to eq(110)
      expect(Rucades::CADESCOM_HASH_ALGORITHM_CP_GOST_3411_2012_256_HMAC).to eq(111)
      expect(Rucades::CADESCOM_HASH_ALGORITHM_CP_GOST_3411_2012_512_HMAC).to eq(112)
      expect(Rucades::CADESCOM_AllowNone).to eq(0x00)
      expect(Rucades::CADESCOM_AllowNoOutstandingRequest).to eq(0x01)
      expect(Rucades::CADESCOM_AllowUntrustedCertificate).to eq(0x02)
      expect(Rucades::CADESCOM_AllowUntrustedRoot).to eq(0x04)
      expect(Rucades::CADESCOM_SkipInstallToStore).to eq(0x10000000)
      expect(Rucades::ENABLE_CARRIER_TYPE_CSP).to eq(0x01)
      expect(Rucades::ENABLE_CARRIER_TYPE_FKC_NO_SM).to eq(0x02)
      expect(Rucades::ENABLE_CARRIER_TYPE_FKC_SM).to eq(0x04)
      expect(Rucades::ENABLE_ANY_CARRIER_TYPE).to eq(0x07)
      expect(Rucades::DISABLE_EVERY_CARRIER_OPERATION).to eq(0x00)
      expect(Rucades::ENABLE_CARRIER_OPEN_ENUM).to eq(0x01)
      expect(Rucades::ENABLE_CARRIER_CREATE).to eq(0x02)
      expect(Rucades::ENABLE_ANY_OPERATION).to eq(0x03)
      expect(Rucades::MEDIA_TYPE_REGISTRY).to eq(0x00000001)
      expect(Rucades::MEDIA_TYPE_HDIMAGE).to eq(0x00000002)
      expect(Rucades::MEDIA_TYPE_CLOUD).to eq(0x00000004)
      expect(Rucades::MEDIA_TYPE_SCARD).to eq(0x00000008)
      expect(Rucades::XCN_CRYPT_STRING_BASE64HEADER).to eq(0)
      expect(Rucades::AT_KEYEXCHANGE).to eq(1)
      expect(Rucades::AT_SIGNATURE).to eq(2)
      expect(Rucades::CAPICOM_ENCODE_BASE64).to eq(0)
      expect(Rucades::CADESCOM_ENCODE_ANY).to eq(-1)
      expect(Rucades::CAPICOM_EKU_ENCRYPTING_FILE_SYSTEM).to eq(6)
      expect(Rucades::CAPICOM_CERT_INFO_ISSUER_SIMPLE_NAME).to eq(1)
      expect(Rucades::CAPICOM_CERT_INFO_SUBJECT_EMAIL_NAME).to eq(2)
      expect(Rucades::CAPICOM_CERT_INFO_ISSUER_EMAIL_NAME).to eq(3)
      expect(Rucades::CAPICOM_CERT_INFO_SUBJECT_UPN).to eq(4)
      expect(Rucades::CAPICOM_CERT_INFO_ISSUER_UPN).to eq(5)
      expect(Rucades::CAPICOM_CERT_INFO_SUBJECT_DNS_NAME).to eq(6)
      expect(Rucades::CAPICOM_CERT_INFO_ISSUER_DNS_NAME).to eq(7)
      expect(Rucades::CAPICOM_PROPID_KEY_PROV_INFO).to eq(2)
      expect(Rucades::CAPICOM_ENCRYPTION_KEY_LENGTH_MAXIMUM).to eq(0)
      expect(Rucades::CAPICOM_ENCRYPTION_KEY_LENGTH_40_BITS).to eq(1)
      expect(Rucades::CAPICOM_ENCRYPTION_KEY_LENGTH_56_BITS).to eq(2)
      expect(Rucades::CAPICOM_ENCRYPTION_KEY_LENGTH_128_BITS).to eq(3)
      expect(Rucades::CAPICOM_ENCRYPTION_KEY_LENGTH_192_BITS).to eq(4)
      expect(Rucades::CAPICOM_ENCRYPTION_KEY_LENGTH_256_BITS).to eq(5)
      expect(Rucades::CAPICOM_DATA_ENCIPHERMENT_KEY_USAGE).to eq(16)
      expect(Rucades::CAPICOM_DIGITAL_SIGNATURE_KEY_USAGE).to eq(128)

      expect(Rucades::CAPICOM_OID_AUTHORITY_KEY_IDENTIFIER_EXTENSION).to eq(1)
      expect(Rucades::CAPICOM_OID_KEY_ATTRIBUTES_EXTENSION).to eq(2)
      expect(Rucades::CAPICOM_OID_CERT_POLICIES_95_EXTENSION).to eq(3)
      expect(Rucades::CAPICOM_OID_KEY_USAGE_RESTRICTION_EXTENSION).to eq(4)
      expect(Rucades::CAPICOM_OID_LEGACY_POLICY_MAPPINGS_EXTENSION).to eq(5)
      expect(Rucades::CAPICOM_OID_SUBJECT_ALT_NAME_EXTENSION).to eq(6)
      expect(Rucades::CAPICOM_OID_ISSUER_ALT_NAME_EXTENSION).to eq(7)
      expect(Rucades::CAPICOM_OID_BASIC_CONSTRAINTS_EXTENSION).to eq(8)
      expect(Rucades::CAPICOM_OID_SUBJECT_KEY_IDENTIFIER_EXTENSION).to eq(9)
      expect(Rucades::CAPICOM_OID_KEY_USAGE_EXTENSION).to eq(10)
      expect(Rucades::CAPICOM_OID_PRIVATEKEY_USAGE_PERIOD_EXTENSION).to eq(11)
      expect(Rucades::CAPICOM_OID_SUBJECT_ALT_NAME2_EXTENSION).to eq(12)
      expect(Rucades::CAPICOM_OID_ISSUER_ALT_NAME2_EXTENSION).to eq(13)
      expect(Rucades::CAPICOM_OID_BASIC_CONSTRAINTS2_EXTENSION).to eq(14)
      expect(Rucades::CAPICOM_OID_NAME_CONSTRAINTS_EXTENSION).to eq(15)
      expect(Rucades::CAPICOM_OID_CRL_DIST_POINTS_EXTENSION).to eq(16)
      expect(Rucades::CAPICOM_OID_CERT_POLICIES_EXTENSION).to eq(17)
      expect(Rucades::CAPICOM_OID_POLICY_MAPPINGS_EXTENSION).to eq(18)
      expect(Rucades::CAPICOM_OID_AUTHORITY_KEY_IDENTIFIER2_EXTENSION).to eq(19)
      expect(Rucades::CAPICOM_OID_POLICY_CONSTRAINTS_EXTENSION).to eq(20)
      expect(Rucades::CAPICOM_OID_ENHANCED_KEY_USAGE_EXTENSION).to eq(21)
      expect(Rucades::CAPICOM_OID_CERTIFICATE_TEMPLATE_EXTENSION).to eq(22)
      expect(Rucades::CAPICOM_OID_APPLICATION_CERT_POLICIES_EXTENSION).to eq(23)
      expect(Rucades::CAPICOM_OID_APPLICATION_POLICY_MAPPINGS_EXTENSION).to eq(24)
      expect(Rucades::CAPICOM_OID_APPLICATION_POLICY_CONSTRAINTS_EXTENSION).to eq(25)
      expect(Rucades::CAPICOM_OID_AUTHORITY_INFO_ACCESS_EXTENSION).to eq(26)
      expect(Rucades::CAPICOM_OID_SERVER_AUTH_EKU).to eq(100)
      expect(Rucades::CAPICOM_OID_CLIENT_AUTH_EKU).to eq(101)
      expect(Rucades::CAPICOM_OID_CODE_SIGNING_EKU).to eq(102)
      expect(Rucades::CAPICOM_OID_EMAIL_PROTECTION_EKU).to eq(103)
      expect(Rucades::CAPICOM_OID_IPSEC_END_SYSTEM_EKU).to eq(104)
      expect(Rucades::CAPICOM_OID_IPSEC_TUNNEL_EKU).to eq(105)
      expect(Rucades::CAPICOM_OID_IPSEC_USER_EKU).to eq(106)
      expect(Rucades::CAPICOM_OID_TIME_STAMPING_EKU).to eq(107)
      expect(Rucades::CAPICOM_OID_CTL_USAGE_SIGNING_EKU).to eq(108)
      expect(Rucades::CAPICOM_OID_TIME_STAMP_SIGNING_EKU).to eq(109)
      expect(Rucades::CAPICOM_OID_SERVER_GATED_CRYPTO_EKU).to eq(110)
      expect(Rucades::CAPICOM_OID_ENCRYPTING_FILE_SYSTEM_EKU).to eq(111)
      expect(Rucades::CAPICOM_OID_EFS_RECOVERY_EKU).to eq(112)
      expect(Rucades::CAPICOM_OID_WHQL_CRYPTO_EKU).to eq(113)
      expect(Rucades::CAPICOM_OID_NT5_CRYPTO_EKU).to eq(114)
      expect(Rucades::CAPICOM_OID_OEM_WHQL_CRYPTO_EKU).to eq(115)
      expect(Rucades::CAPICOM_OID_EMBEDED_NT_CRYPTO_EKU).to eq(116)
      expect(Rucades::CAPICOM_OID_ROOT_LIST_SIGNER_EKU).to eq(117)
      expect(Rucades::CAPICOM_OID_QUALIFIED_SUBORDINATION_EKU).to eq(118)
      expect(Rucades::CAPICOM_OID_KEY_RECOVERY_EKU).to eq(119)
      expect(Rucades::CAPICOM_OID_DIGITAL_RIGHTS_EKU).to eq(120)
      expect(Rucades::CAPICOM_OID_LICENSES_EKU).to eq(121)
      expect(Rucades::CAPICOM_OID_LICENSE_SERVER_EKU).to eq(122)
      expect(Rucades::CAPICOM_OID_SMART_CARD_LOGON_EKU).to eq(123)
      expect(Rucades::CAPICOM_OID_PKIX_POLICY_QUALIFIER_CPS).to eq(124)
      expect(Rucades::CAPICOM_OID_PKIX_POLICY_QUALIFIER_USERNOTICE).to eq(125)
    end

    it "has appropriate string constant definitions" do
      expect(Rucades::CAPICOM_MY_STORE).to eq("My")
      expect(Rucades::CAPICOM_CA_STORE).to eq("CA")
      expect(Rucades::CAPICOM_ROOT_STORE).to eq("Root")
      expect(Rucades::CAPICOM_OTHER_STORE).to eq("AddressBook")
      expect(Rucades::XmlDsigGost3410UrlObsolete).to eq("http://www.w3.org/2001/04/xmldsig-more#gostr34102001-gostr3411")
      expect(Rucades::XmlDsigGost3411UrlObsolete).to eq("http://www.w3.org/2001/04/xmldsig-more#gostr3411")
      expect(Rucades::XmlDsigGost3410Url).to eq("urn:ietf:params:xml:ns:cpxmlsec:algorithms:gostr34102001-gostr3411")
      expect(Rucades::XmlDsigGost3411Url).to eq("urn:ietf:params:xml:ns:cpxmlsec:algorithms:gostr3411")
      expect(Rucades::XmlDsigGost3410Url2012256)
        .to eq("urn:ietf:params:xml:ns:cpxmlsec:algorithms:gostr34102012-gostr34112012-256")
      expect(Rucades::XmlDsigGost3411Url2012256).to eq("urn:ietf:params:xml:ns:cpxmlsec:algorithms:gostr34112012-256")
      expect(Rucades::XmlDsigGost3410Url2012512)
        .to eq("urn:ietf:params:xml:ns:cpxmlsec:algorithms:gostr34102012-gostr34112012-512")
      expect(Rucades::XmlDsigGost3411Url2012512).to eq("urn:ietf:params:xml:ns:cpxmlsec:algorithms:gostr34112012-512")
    end
  end
end
# rubocop:enable Metrics/BlockLength
